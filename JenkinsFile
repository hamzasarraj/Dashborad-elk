pipeline {
    environment {
        registry = "hamza1991/dashboard1991"
        registryCredential = 'dashboard'
        dockerImage = "hibadashboardproject"
        REMOTE_NAME = 'hiba'
        REMOTE_HOST = 'hiba@192.168.220.54'
        REMOTE_USER = 'hiba'
        REMOTE_PASSWORD = 'hiba'
        KUBE_CONFIG_PATH = '~/.kube/config' // Path to your Kubernetes configuration file
    }
    agent any
    stages {
        stage("Cloning Project") {
            steps {
                script {
                    git branch: 'main',
                    url: 'https://github.com/hamzasarraj/Dashborad-elk.git'
                    echo 'checkout stage'
                }
            }
        }
        stage('Print Environment') {
            steps {
                script {
                    sh 'echo "PATH: $PATH"'
                    sh 'echo "Maven Version: $(mvn -v)"'
                    sh 'printenv'
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    sh "mvn clean verify sonar:sonar \
                        -Dsonar.projectKey=dashboard-backend \
                        -Dsonar.projectName='dashboard-backend' \
                        -Dsonar.host.url=http://172.17.0.2:9000 \
                        -Dsonar.token=sqp_6faae86e78e63cd549ae052af1838534b193b6d3"
                }
            }
        }

        stage("Compile Project") {
            steps {
                sh 'mvn compile -X -e'
                echo 'compile stage done'
            }
        }
        stage('Maven Package') {
            steps {
                sh 'mvn package -DskipTests'
            }
        }
        stage("Docker Build") {
            steps {
                script {
                   // sh 'docker build -t hamza1991/dashboard1991 .'
                    dockerImage = docker.build("${registry}:${BUILD_NUMBER}")
                }
            }
        }
        stage("Docker Push") {
            steps {
                script {
                    docker.withRegistry('', registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Cleaning up') {
            steps {
                sh "docker rmi ${registry}:${BUILD_NUMBER}"
            }
        }
        stage('Remote SSH') {
            steps {
                script {
                    def remote = [:]
                    remote.name = env.REMOTE_NAME
                    remote.host = env.REMOTE_HOST
                    remote.user = env.REMOTE_USER
                    remote.password = env.REMOTE_PASSWORD
                    remote.allowAnyHosts = true

                    // Copy your Kubernetes manifests to the remote machine
                    sshCommand remote: remote, command: "scp -r /home/hiba/deployment.yml  ${env.REMOTE_USER}@${env.REMOTE_HOST}:/tmp/"

                    // SSH into the remote machine and apply the manifests using kubectl
                    sshCommand remote: remote, command: "KUBECONFIG=${env.KUBE_CONFIG_PATH} kubectl apply -f /tmp/manifests/"
                }
            }
        }
    }
}
