pipeline {
    environment {
        registry = "hamza1991/dashboard1991"
        registryCredential = 'dashboard'
        dockerImage = "hibadashboardproject"
        REMOTE_NAME = 'hiba'
        REMOTE_HOST = 'hiba@192.168.220.54'
        REMOTE_USER = 'hiba'
        REMOTE_PASSWORD = 'hiba'
        KUBE_CONFIG_PATH = '~/.kube/config' // Path to your Kubernetes configuration file
        NEXUS_CREDENTIALS_ID = 'nexus-credentials' // ID of the Nexus credentials in Jenkins
        NEXUS_REPOSITORY_URL = 'http://localhost:8081/repository/front-dashboard/'
    }
    agent any
    stages {
        stage("Cloning Project") {
            steps {
                script {
                    git branch: 'main',
                    url: 'https://github.com/hamzasarraj/Dashborad-elk.git'
                    echo 'checkout stage'
                }
            }
        }
        stage('Print Environment') {
            steps {
                script {
                    sh 'echo "PATH: $PATH"'
                    sh 'echo "Maven Version: $(mvn -v)"'
                    sh 'printenv'
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    sh "mvn clean verify sonar:sonar \
                        -Dsonar.projectKey=dashboard-backend \
                        -Dsonar.projectName='dashboard-backend' \
                        -Dsonar.host.url=http://172.17.0.2:9000 \
                        -Dsonar.token=sqp_6faae86e78e63cd549ae052af1838534b193b6d3"
                }
            }
        }

        stage("Compile Project") {
            steps {
                sh 'mvn compile -X -e'
                echo 'compile stage done'
            }
        }
        stage('Maven Package') {
            steps {
                sh 'mvn package -DskipTests'
            }
        }
        stage('Maven Deploy to Nexus') {
            steps {
                 def mavenHome = tool 'Maven' // 'Maven' should match the Maven installation name in Jenkins
                    def mavenCmd = "${mavenHome}/bin/mvn"

                    sh "${mavenCmd} clean install deploy -DskipTests -Dmaven.test.failure.ignore=true -DaltDeploymentRepository=nexus::default::${NEXUS_REPOSITORY_URL}"
            }
        }
        stage("Docker Build") {
            steps {
                script {
                    dockerImage = docker.build("${registry}:${BUILD_NUMBER}")
                }
            }
        }
        stage("Docker Push") {
            steps {
                script {
                    docker.withRegistry('', registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Cleaning up') {
            steps {
                sh "docker rmi ${registry}:${BUILD_NUMBER}"
            }
        }
        
    }
}
