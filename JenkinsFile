pipeline {
    environment {
        registry = "hamza1991/dashboard1991"
        registryCredential = 'dashboard'
        dockerImage = "hibadashboardproject"
    }
    agent any
    stages {
        stage("Cloning Project") {
            steps {
                script {
                    git branch: 'main',
                    url: 'https://github.com/hamzasarraj/Dashborad-elk.git'
                    echo 'checkout stage'
                }
            }
        }
        stage('Print Environment') {
            steps {
                script {
                    sh 'echo "PATH: $PATH"'
                    sh 'echo "Maven Version: $(mvn -v)"'
                    sh 'printenv'
                }
            }
        }
        stage('SonarQube Analysis') {
    steps {
        script {
            withSonarQubeEnv(credentialsId: 'sonar') {
                sh "${mvn}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=dashboard -Dsonar.projectName='dashboard'"
            }
        }
    }
}

        stage("Compile Project") {
            steps {
                sh 'mvn compile -X -e'
                echo 'compile stage done'
            }
        }
        stage('Maven Package') {
            steps {
                sh 'mvn package -DskipTests'
            }
        }
        stage("Docker Build") {
            steps {
                script {
                   // sh 'docker build -t hamza1991/dashboard1991 .'
                    dockerImage = docker.build("${registry}:${BUILD_NUMBER}")
                }
            }
        }
        stage("Docker Push") {
            steps {
                script {
                    docker.withRegistry('', registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Cleaning up') {
            steps {
                sh "docker rmi ${registry}:${BUILD_NUMBER}"
            }
        }
    }
}
